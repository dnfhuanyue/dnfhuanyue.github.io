var tape=require("tape"),on=require("../../../lib/events/on"),trigger=require("../../../lib/events/trigger"),attachLink=require("../../../lib/proto/attach-link"),attr="data-pjax-state";tape("test attach link prototype method",(function(t){var a=document.createElement("a"),loadUrlCalled=!1;attachLink.call({options:{},loadUrl:function(){loadUrlCalled=!0}},a);var internalUri=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search;a.href=internalUri,trigger(a,"click",{metaKey:!0}),t.equal(a.getAttribute(attr),"modifier","event key modifier stop behavior"),a.href="http://external.com/",trigger(a,"click"),t.equal(a.getAttribute(attr),"external","external url stop behavior"),window.location.hash="#anchor",a.href=internalUri+"#anchor",trigger(a,"click"),t.equal(a.getAttribute(attr),"anchor","internal anchor stop behavior"),a.href=internalUri+"#another-anchor",trigger(a,"click"),t.equal(a.getAttribute(attr),"anchor","different anchors stop behavior"),window.location.hash="",a.href=internalUri+"#",trigger(a,"click"),t.equal(a.getAttribute(attr),"anchor-empty","empty anchor stop behavior"),a.href=window.location.protocol+"//"+window.location.host+"/internal",trigger(a,"click"),t.equals(a.getAttribute(attr),"load","triggering an internal link sets the state attribute to 'load'"),t.equals(loadUrlCalled,!0,"triggering an internal link actually loads the page"),t.end()})),tape("test attach link preventDefaulted events",(function(t){var loadUrlCalled=!1,a=document.createElement("a");on(a,"click",(function(event){event.preventDefault()})),attachLink.call({options:{},loadUrl:function(){loadUrlCalled=!0}},a),a.href="#",trigger(a,"click"),t.equal(loadUrlCalled,!1,"events that are preventDefaulted should not fire callback"),t.end()})),tape("test options are not modified by attachLink",(function(t){var a=document.createElement("a"),options={foo:"bar"};attachLink.call({options:options,loadUrl:function(){}},a),a.href=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,trigger(a,"click"),t.equal(1,Object.keys(options).length,"options object that is passed in should not be modified"),t.equal("bar",options.foo,"options object that is passed in should not be modified"),t.end()})),tape("test link triggered by keyboard",(function(t){var a=document.createElement("a"),pjax={options:{},loadUrl:function(){t.equal(a.getAttribute(attr),"load","triggering a internal link actually loads the page")}};t.plan(3),attachLink.call(pjax,a),a.href=window.location.protocol+"//"+window.location.host+"/internal",trigger(a,"keyup",{keyCode:14}),t.equal(a.getAttribute(attr),"","keycode other than 13 doesn't trigger anything"),trigger(a,"keyup",{keyCode:13,metaKey:!0}),t.equal(a.getAttribute(attr),"modifier","event key modifier stop behavior"),trigger(a,"keyup",{keyCode:13}),t.end()})),tape("test link with the same URL as the current one, when currentUrlFullReload set to true",(function(t){var a=document.createElement("a"),pjax={options:{currentUrlFullReload:!0},reload:function(){t.pass("this.reload() was called correctly")},loadUrl:function(){t.fail("loadUrl() was called wrongly")}};t.plan(2),attachLink.call(pjax,a),a.href=window.location.href,trigger(a,"click"),t.equal(a.getAttribute(attr),"reload","reload stop behavior"),t.end()}));