<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>小米6 MIUI 10.3.1.0 | 稳定版安装Google Camera</title>
    <url>/2019/12/31/%E5%B0%8F%E7%B1%B36%20MIUI%2010.3.1.0%20%20%E7%A8%B3%E5%AE%9A%E7%89%88%E5%AE%89%E8%A3%85Google%20Camera/</url>
    <content><![CDATA[<p>谷歌相机照亮你的美.</p>
<a id="more"></a> 

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>前段时间博主升级了MIUI11发现谷歌相机并不能正常使用, 并且给我的体验不是很好, 于是着手降级MIUI10.3.1.0稳定版; 中间遇到了很多坑…好在问题不大. 本文仅作参考, 刷机有风险, Root需谨慎.</p>
</blockquote>
<h3 id="下载所需工具包"><a href="#下载所需工具包" class="headerlink" title="下载所需工具包"></a>下载所需工具包</h3><h4 id="官方途径"><a href="#官方途径" class="headerlink" title="官方途径"></a>官方途径</h4><ul>
<li>MIUI10.3.1.0稳定版线刷包|卡刷包<ul>
<li><a href="http://www.miui.com/thread-8057850-1-1.html" target="_blank" rel="noopener">小米手机6官方ROM合集</a></li>
<li><a href="https://miuiver.com/sagit_fastboot/" target="_blank" rel="noopener">小米6 MIUI稳定版下载索引 (线刷包)</a></li>
</ul>
</li>
<li>第三方Rec<ul>
<li><a href="https://twrp.me/" target="_blank" rel="noopener">TWRP官网</a></li>
</ul>
</li>
<li>伪Google服务<ul>
<li><a href="https://microg.org/" target="_blank" rel="noopener">Services Core</a></li>
<li>谷歌相机</li>
<li><a href="https://www.celsoazevedo.com/files/android/google-camera/" target="_blank" rel="noopener">Google Camera下载</a></li>
</ul>
</li>
<li>ADB工具<ul>
<li><a href="https://developer.android.google.cn/studio/releases/platform-tools.html" target="_blank" rel="noopener">Android开发官方网站</a></li>
</ul>
</li>
<li>酷安App<ul>
<li><a href="https://www.coolapk.com/" target="_blank" rel="noopener">酷安官网</a></li>
</ul>
</li>
</ul>
<h4 id="博主提供"><a href="#博主提供" class="headerlink" title="博主提供"></a>博主提供</h4><ul>
<li><a href="https://pan.baidu.com/s/18kaYzmKhtUZ4f_mjpMmKGw" target="_blank" rel="noopener">小米6谷歌相机工具包</a> 提取码: 578p, 目录内容如下</li>
</ul>
<p><img src="https://imgsrc.baidu.com/super/pic/item/77094b36acaf2edd88e341bb821001e939019355.jpg" alt="avatar"></p>
<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><h3 id="线刷-MIUI"><a href="#线刷-MIUI" class="headerlink" title="线刷 MIUI"></a>线刷 MIUI</h3><blockquote>
<p><strong>线刷会双清数据, 如有重要数据请自行备份!</strong></p>
</blockquote>
<ul>
<li>线刷参考<ul>
<li><a href="https://www.miui.com/shuaji-393.html" target="_blank" rel="noopener">MIUI官方线刷教程</a></li>
<li><a href="http://www.miui.com/thread-19634113-1-1.html" target="_blank" rel="noopener">小米手机解BL锁、线刷详细教程，适用于小米全系列手机</a></li>
</ul>
</li>
</ul>
<h3 id="刷入-TWRP"><a href="#刷入-TWRP" class="headerlink" title="刷入 TWRP"></a>刷入 TWRP</h3><blockquote>
<p>手机插入USB数据线连接至电脑, 并将相应工具拷贝到手机储存根目录中.</p>
</blockquote>
<h4 id="手动刷入"><a href="#手动刷入" class="headerlink" title="手动刷入"></a>手动刷入</h4><ol>
<li>手机关机</li>
<li>同时按下音量减少键+关机键,稍等会进入fastboot模式, 如下图所示</li>
</ol>
<p><img src="https://www.miui.com/static/article/innerimg/tongyong/tongyong-fastboot.jpg" alt="avatar"></p>
<ol>
<li><p>打开电脑以管理员运行CMD, 进入到ADB所在目录, 执行以下命令:</p>
<ul>
<li>列出fastboot设备</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot devices</span><br></pre></td></tr></table></figure>

<ul>
<li>刷写分区</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot flash recovery twrp-3.3.1-0-sagit.img</span><br></pre></td></tr></table></figure>

<ul>
<li>重启到recovery模式</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot oem reboot-recovery</span><br></pre></td></tr></table></figure>

</li>
</ol>
<blockquote>
<p>recovery模式如下图所示</p>
</blockquote>
<img src="https://imgsrc.baidu.com/super/pic/item/b812c8fcc3cec3fd83d6af27d988d43f869427f3.jpg" alt="avatar" style="zoom:25%;" />

<h4 id="一键刷入"><a href="#一键刷入" class="headerlink" title="一键刷入"></a>一键刷入</h4><ol>
<li><a href="https://pan.baidu.com/s/18kaYzmKhtUZ4f_mjpMmKGw" target="_blank" rel="noopener">下载博主提供的工具包</a> 提取码: 578p</li>
<li>解压<strong>TWRP-3.3.0-0421-XIAOMI6-CN-wzsx150-fastboot.7z</strong>并打开</li>
<li>找到<strong>recovery-twrp一键刷入工具.bat</strong>双击运行, 按提示进行相应操作即可</li>
</ol>
<blockquote>
<p>成功进入TWRP后, 如果你是第一次刷入会有提示, 默认滑动即可. 点击<strong>安装</strong>, 找到<strong>Magisk-v20.1.zip</strong>刷入, 成功刷入后点击重启.</p>
</blockquote>
<img src="https://imgsrc.baidu.com/super/pic/item/11385343fbf2b211849b8e1cc58065380cd78e2e.jpg" alt="avatar" style="zoom:25%;" />

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="启用-Camera2-API"><a href="#启用-Camera2-API" class="headerlink" title="启用 Camera2 API"></a>启用 Camera2 API</h3><ol>
<li><p>打开文件管理器找到酷安安装包安装</p>
</li>
<li><p>下载<strong>Scene</strong>和<strong>Manual Camera Compatibility Test</strong></p>
</li>
<li><p>打开<strong>Magisk Manager</strong>俗称 “面具”</p>
</li>
<li><p>打开<strong>Scene</strong>给予超级用户权限, 如下图; 并开启<strong>Camera2 HAL、EIS</strong>选项, 位置如下</p>
<ul>
<li>常用功能→附加功能→全部→应用程序→<strong>Camera2 HAL、EIS</strong></li>
</ul>
</li>
</ol>
<img src="https://imgsrc.baidu.com/super/pic/item/b21c8701a18b87d6ef30a04d080828381f30fd76.jpg" alt="avatar" style="zoom:25%;" />

<img src="https://imgsrc.baidu.com/super/pic/item/c8ea15ce36d3d539bb8304913587e950352ab021.jpg" alt="avatar" style="zoom:25%;" />

<ol start="5">
<li>打开<strong>Manual Camera Compatibility Test</strong>, 看到如下图所示即可</li>
</ol>
<img src="https://imgsrc.baidu.com/super/pic/item/b151f8198618367a1841768f21738bd4b21ce59c.jpg" alt="avatar" style="zoom: 25%;" />

<h3 id="安装谷歌服务以及谷歌相机"><a href="#安装谷歌服务以及谷歌相机" class="headerlink" title="安装谷歌服务以及谷歌相机"></a>安装谷歌服务以及谷歌相机</h3><ol>
<li>打开文件管理器找到<strong>com.google.android.gms.apk和Gcam_6.1.021_Advanced_V1.6-Fu24_5Lens-01r3.1.apk</strong>安装, 打开谷歌相机正常如下图</li>
</ol>
<img src="https://imgsrc.baidu.com/super/pic/item/359b033b5bb5c9ea1fee08b1da39b6003af3b346.jpg" alt="avatar" style="zoom:25%;" />

<blockquote>
<p>到此, 谷歌相机安装完毕, 快去体验谷歌相机的强大吧<strong>( ◕ᴗ◕✿ )</strong> .</p>
</blockquote>
<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><h3 id="白天"><a href="#白天" class="headerlink" title="白天"></a>白天</h3><img src="https://imgsrc.baidu.com/super/pic/item/6a600c338744ebf8e5a16c6dd6f9d72a6159a794.jpg" alt="avatar"  />

<h3 id="夜晚"><a href="#夜晚" class="headerlink" title="夜晚"></a>夜晚</h3><p><img src="https://imgsrc.baidu.com/super/pic/item/4610b912c8fcc3cebec6c2619d45d688d43f2059.jpg" alt="avatar"></p>
<img src="https://dss1.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/super/pic/item/cb8065380cd791238b179e26a2345982b3b780e8.jpg" alt="avatar" style="zoom:25%;" />]]></content>
      <categories>
        <category>Google Camera</category>
      </categories>
      <tags>
        <tag>MIUI</tag>
        <tag>Google Camera</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo静态资源压缩-gulp</title>
    <url>/2019/11/24/Hexo%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8E%8B%E7%BC%A9-gulp/</url>
    <content><![CDATA[<p>用自动化构建工具增强你的工作流程! 加快响应速度.</p>
<a id="more"></a> 

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>如果你先前将 gulp 安装到全局环境中了, 请执行 <code>npm rm --global gulp</code> 将 gulp 删除再继续以下操作.</p>
</blockquote>
<h3 id="检查-node-npm-和-npx-是否正确安装"><a href="#检查-node-npm-和-npx-是否正确安装" class="headerlink" title="检查 node, npm 和 npx 是否正确安装"></a>检查 node, npm 和 npx 是否正确安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node --version</span><br><span class="line">npm --version</span><br><span class="line">npx --version</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果上述工具还没安装, 请先下载 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>.</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装-gulp-命令行工具"><a href="#安装-gulp-命令行工具" class="headerlink" title="安装 gulp 命令行工具"></a>安装 gulp 命令行工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br></pre></td></tr></table></figure>

<h3 id="安装-gulp-及插件-作为开发时依赖项"><a href="#安装-gulp-及插件-作为开发时依赖项" class="headerlink" title="安装 gulp 及插件, 作为开发时依赖项"></a>安装 gulp 及插件, 作为开发时依赖项</h3><ul>
<li><code>gulp</code></li>
<li><code>gulp-terser</code></li>
<li><code>gulp-autoprefixer</code></li>
<li><code>gulp-clean-css</code></li>
<li><code>gulp-htmlmin</code></li>
<li><code>gulp-htmlclean</code></li>
<li><code>gulp-imagemin</code></li>
</ul>
<blockquote>
<p>命令如下:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save-dev gulp</span><br><span class="line">npm install --save-dev gulp-terser</span><br><span class="line">npm install --save-dev gulp-autoprefixer</span><br><span class="line">npm install --save-dev gulp-clean-css</span><br><span class="line">npm install --save-dev gulp-htmlmin</span><br><span class="line">npm install --save-dev gulp-htmlclean</span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure>

<h2 id="创建-gulpfile-文件"><a href="#创建-gulpfile-文件" class="headerlink" title="创建 gulpfile 文件"></a>创建 gulpfile 文件</h2><blockquote>
<p>利用任何文本编辑器在<div style='color:red'>站点根目录</div>下创建一个名为 gulpfile.js 的文件, 并在文件中输入以下内容:</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    terser = <span class="built_in">require</span>(<span class="string">'gulp-terser'</span>),</span><br><span class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>),</span><br><span class="line">    cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>),</span><br><span class="line">    htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>),</span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> configs = &#123;</span><br><span class="line">    autoprefixer: &#123;</span><br><span class="line">        overrideBrowserslist: [</span><br><span class="line">            <span class="string">'last 2 versions'</span>,</span><br><span class="line">            <span class="string">'&gt; 1%'</span>,</span><br><span class="line">            <span class="string">'Chrome &gt;= 40'</span>,</span><br><span class="line">            <span class="string">'Firefox &gt;= 40'</span>,</span><br><span class="line">            <span class="string">'ie &gt;= 10'</span>,</span><br><span class="line">            <span class="string">'Safari &gt;= 8'</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    cleanCSS: &#123;</span><br><span class="line">        compatibility: <span class="string">'ie10'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩js文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">minifyJS</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'public/**/*.js'</span>, <span class="string">'!public/**/*.min.js'</span>])</span><br><span class="line">        .pipe(terser(&#123;</span><br><span class="line">            keep_fnames: <span class="literal">true</span>,</span><br><span class="line">            mangle: <span class="literal">false</span></span><br><span class="line">        &#125;))</span><br><span class="line">        <span class="comment">// .pipe(rename(&#123; suffix: '.min' &#125;))</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'public'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩css文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">minifyCSS</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'public/**/*.css'</span>, <span class="string">'!public/**/*.min.css'</span>])</span><br><span class="line">        .pipe(autoprefixer(configs.autoprefixer))</span><br><span class="line">        .pipe(cleanCSS(configs.cleanCSS))</span><br><span class="line">        <span class="comment">// .pipe(rename(&#123; suffix: '.min' &#125;))</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'public'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩html文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">minifyHTML</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'public/**/*.html'</span>)</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            removeRedundantAttributes: <span class="literal">true</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(htmlclean(&#123;</span><br><span class="line">            protect: <span class="regexp">/&lt;\!--%fooTemplate\b.*?%--&gt;/g</span>,</span><br><span class="line">            edit: <span class="function"><span class="keyword">function</span> (<span class="params">html</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> html.replace(<span class="regexp">/\begg(s?)\b/ig</span>, <span class="string">'omelet$1'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'public'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public/images目录内图片</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">minifyImages</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    gulp.src(<span class="string">'public/images/**/*.*'</span>)</span><br><span class="line">        .pipe(imagemin([</span><br><span class="line">            imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;),</span><br><span class="line">            imagemin.jpegtran(&#123;<span class="attr">progressive</span>: <span class="literal">true</span>&#125;),</span><br><span class="line">            imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;),</span><br><span class="line">            imagemin.svgo(&#123;</span><br><span class="line">                plugins: [</span><br><span class="line">                    &#123;<span class="attr">removeViewBox</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">                    &#123;<span class="attr">cleanupIDs</span>: <span class="literal">false</span>&#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;)</span><br><span class="line">        ]))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'public/images'</span>));</span><br><span class="line">    cb();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exports.minifyJS = minifyJS;</span><br><span class="line">exports.minifyCSS = minifyCSS;</span><br><span class="line">exports.minifyHTML = minifyHTML;</span><br><span class="line">exports.minifyImages = minifyImages;</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'build'</span>, gulp.series(</span><br><span class="line">    gulp.parallel(</span><br><span class="line">        minifyJS,</span><br><span class="line">        minifyCSS,</span><br><span class="line">        minifyHTML,</span><br><span class="line">        minifyImages</span><br><span class="line">    )</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, gulp.series(<span class="string">'build'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件监控</span></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'public/**'</span>, gulp.series(<span class="string">'build'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote>
<p>要运行 gulp 任务, 只需每次在执行 <code>generate</code> 命令后执行 <code>gulp</code> 就可以实现对静态资源的压缩. <code>gulp</code>后面可以加上要执行的任务名, 例如 <code>gulp watch</code> , 如果没有指定任务名, 则会执行任务名为 <code>default</code> 的默认任务.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">gulp</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>gulp</tag>
      </tags>
  </entry>
</search>
